
==================== Tidy Core ====================
2018-12-28 08:27:45.2119967 UTC

Result size of Tidy Core
  = {terms: 1,493, types: 941, coercions: 32, joins: 12/28}

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Main.viewGameState1 :: [Int8]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
Main.viewGameState1 = GHC.Int.$w$cenumFromTo3 0# 15#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Main.viewGameState2 :: [Int8]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
Main.viewGameState2 = GHC.Int.$w$cenumFromTo3 0# 16#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex17 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.arrayByIndex17 = ")"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex18 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
Main.arrayByIndex18 = " not in range [0.."#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex1 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Main.arrayByIndex1 = "Error in array index; "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex4 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.arrayByIndex4 = GHC.Types.I# 76#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex5 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.arrayByIndex5 = GHC.Types.I# 83#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex6 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.arrayByIndex6 = GHC.Types.I# 31#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex7 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.arrayByIndex7 = GHC.Types.I# 82#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex9 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 110 0}]
Main.arrayByIndex9
  = "libraries\\\\array\\\\Data\\\\Array\\\\Base.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex8 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.arrayByIndex8 = GHC.CString.unpackCString# Main.arrayByIndex9

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex11 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
Main.arrayByIndex11 = "Data.Array.Base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex10 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.arrayByIndex10
  = GHC.CString.unpackCString# Main.arrayByIndex11

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex13 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
Main.arrayByIndex13 = "array-0.5.2.0"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex12 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.arrayByIndex12
  = GHC.CString.unpackCString# Main.arrayByIndex13

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex3 :: GHC.Stack.Types.SrcLoc
[GblId,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 80}]
Main.arrayByIndex3
  = GHC.Stack.Types.SrcLoc
      Main.arrayByIndex12
      Main.arrayByIndex10
      Main.arrayByIndex8
      Main.arrayByIndex7
      Main.arrayByIndex6
      Main.arrayByIndex5
      Main.arrayByIndex4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex15 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Main.arrayByIndex15 = "error"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex14 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.arrayByIndex14
  = GHC.CString.unpackCString# Main.arrayByIndex15

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex2 :: GHC.Stack.Types.CallStack
[GblId,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 40}]
Main.arrayByIndex2
  = GHC.Stack.Types.PushCallStack
      Main.arrayByIndex14
      Main.arrayByIndex3
      GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_r925 :: Char
[GblId, Caf=NoCafRefs, Str=m]
lvl_r925 = GHC.Types.C# ' '#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1_r926 :: Char
[GblId, Caf=NoCafRefs, Str=m]
lvl1_r926 = GHC.Types.C# '-'#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_r927 :: Char
[GblId, Caf=NoCafRefs, Str=m]
lvl2_r927 = GHC.Types.C# '#'#

Rec {
-- RHS size: {terms: 17, types: 11, coercions: 0, joins: 0/0}
g_r928 :: [Bool] -> String
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>]
g_r928
  = \ (ds_d4Eg :: [Bool]) ->
      case ds_d4Eg of {
        [] -> GHC.Types.[] @ Char;
        : x_a3AX xs_a3AY ->
          GHC.Types.:
            @ Char
            lvl_r925
            (GHC.Types.:
               @ Char
               (case x_a3AX of {
                  False -> lvl1_r926;
                  True -> lvl2_r927
                })
               (g_r928 xs_a3AY))
      }
end Rec }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl3_r929 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl3_r929 = "\n"#

Rec {
-- RHS size: {terms: 13, types: 13, coercions: 0, joins: 0/0}
Main.viewGameState_f [Occ=LoopBreaker] :: [[Bool]] -> String
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>]
Main.viewGameState_f
  = \ (ds_d4DV :: [[Bool]]) ->
      case ds_d4DV of {
        [] -> GHC.Types.[] @ Char;
        : x_a3AV xs_a3AW ->
          ++
            @ Char
            (g_r928 x_a3AV)
            (GHC.CString.unpackAppendCString#
               lvl3_r929 (Main.viewGameState_f xs_a3AW))
      }
end Rec }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.arrayByIndex16 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.arrayByIndex16
  = GHC.CString.unpackCString# Main.arrayByIndex17

-- RHS size: {terms: 27, types: 26, coercions: 4, joins: 0/0}
Main.viewGameState3 :: GHC.Prim.Int# -> GHC.Prim.Int# -> Int
[GblId, Arity=2, Str=<B,U><B,U>x]
Main.viewGameState3
  = \ (dt_a51O :: GHC.Prim.Int#) (y_a50x :: GHC.Prim.Int#) ->
      error
        @ 'GHC.Types.LiftedRep
        @ Int
        (Main.arrayByIndex2
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
        (GHC.CString.unpackAppendCString#
           Main.arrayByIndex1
           (case GHC.Show.$wshowSignedInt 0# y_a50x (GHC.Types.[] @ Char) of
            { (# ww5_a50l, ww6_a50m #) ->
            GHC.Base.++_$s++
              @ Char
              (GHC.CString.unpackAppendCString#
                 Main.arrayByIndex18
                 (case GHC.Show.$wshowSignedInt 0# dt_a51O (GHC.Types.[] @ Char) of
                  { (# ww2_X53C, ww3_X53E #) ->
                  GHC.Base.++_$s++ @ Char Main.arrayByIndex16 ww2_X53C ww3_X53E
                  }))
              ww5_a50l
              ww6_a50m
            }))

-- RHS size: {terms: 140, types: 80, coercions: 0, joins: 0/3}
viewGameState :: GameState -> String
[GblId,
 Arity=1,
 Str=<L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20] 507 0}]
viewGameState
  = \ (a_a3AL :: GameState) ->
      letrec {
        go_a4WT [Occ=LoopBreaker] :: [Int8] -> [[Bool]]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_a4WT
          = \ (ds_a4WU :: [Int8]) ->
              case ds_a4WU of {
                [] -> GHC.Types.[] @ [Bool];
                : y_a4WZ ys_a4X0 ->
                  GHC.Types.:
                    @ [Bool]
                    (letrec {
                       go1_X4ZC [Occ=LoopBreaker] :: [Int8] -> [Bool]
                       [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                       go1_X4ZC
                         = \ (ds1_X4ZE :: [Int8]) ->
                             case ds1_X4ZE of {
                               [] -> GHC.Types.[] @ Bool;
                               : y1_X4ZM ys1_X4ZO ->
                                 GHC.Types.:
                                   @ Bool
                                   (case a_a3AL of
                                    { Data.Array.Base.UArray l_a51M u_a51N dt_a51O ds2_a51P ->
                                    case l_a51M of { (l1_s8AK, l2_s8AL) ->
                                    case u_a51N of { (u1_s8AO, u2_s8AP) ->
                                    case l1_s8AK of { GHC.Int.I8# x_a53E ->
                                    case y_a4WZ of { GHC.Int.I8# y2_a53I ->
                                    case GHC.Prim.<=# x_a53E y2_a53I of {
                                      __DEFAULT -> case GHC.Arr.hopelessIndexError of wild7_00 { };
                                      1# ->
                                        case u1_s8AO of { GHC.Int.I8# y3_a53N ->
                                        case GHC.Prim.<=# y2_a53I y3_a53N of {
                                          __DEFAULT ->
                                            case GHC.Arr.hopelessIndexError of wild8_00 { };
                                          1# ->
                                            case l2_s8AL of { GHC.Int.I8# x1_X5an ->
                                            case y1_X4ZM of { GHC.Int.I8# y4_X5aw ->
                                            case GHC.Prim.<=# x1_X5an y4_X5aw of {
                                              __DEFAULT ->
                                                case GHC.Arr.hopelessIndexError of wild10_00 { };
                                              1# ->
                                                case u2_s8AP of { GHC.Int.I8# y5_X57A ->
                                                case GHC.Prim.<=# y4_X5aw y5_X57A of {
                                                  __DEFAULT ->
                                                    case GHC.Arr.hopelessIndexError of wild11_00 {
                                                    };
                                                  1# ->
                                                    let {
                                                      y6_a50x [Dmd=<S,U>] :: GHC.Prim.Int#
                                                      [LclId]
                                                      y6_a50x
                                                        = GHC.Prim.+#
                                                            (GHC.Prim.*#
                                                               (GHC.Prim.-# y2_a53I x_a53E)
                                                               (GHC.Prim.+#
                                                                  (GHC.Prim.-# y5_X57A x1_X5an) 1#))
                                                            (GHC.Prim.-# y4_X5aw x1_X5an) } in
                                                    case GHC.Prim.<=# 0# y6_a50x of {
                                                      __DEFAULT ->
                                                        case Main.viewGameState3 dt_a51O y6_a50x
                                                        of wild11_00 {
                                                        };
                                                      1# ->
                                                        case GHC.Prim.<# y6_a50x dt_a51O of {
                                                          __DEFAULT ->
                                                            case Main.viewGameState3 dt_a51O y6_a50x
                                                            of wild11_00 {
                                                            };
                                                          1# ->
                                                            case GHC.Prim.indexWordArray#
                                                                   ds2_a51P
                                                                   (GHC.Prim.uncheckedIShiftRA#
                                                                      y6_a50x 6#)
                                                            of wild11_a528
                                                            { __DEFAULT ->
                                                            case GHC.Prim.and#
                                                                   wild11_a528
                                                                   (GHC.Prim.uncheckedShiftL#
                                                                      1##
                                                                      (GHC.Prim.word2Int#
                                                                         (GHC.Prim.and#
                                                                            (GHC.Prim.int2Word#
                                                                               y6_a50x)
                                                                            63##)))
                                                            of {
                                                              __DEFAULT -> GHC.Types.True;
                                                              0## -> GHC.Types.False
                                                            }
                                                            }
                                                        }
                                                    }
                                                }
                                                }
                                            }
                                            }
                                            }
                                        }
                                        }
                                    }
                                    }
                                    }
                                    }
                                    }
                                    })
                                   (go1_X4ZC ys1_X4ZO)
                             }; } in
                     go1_X4ZC Main.viewGameState2)
                    (go_a4WT ys_a4X0)
              }; } in
      Main.viewGameState_f (go_a4WT Main.viewGameState1)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
xWidth :: Int8
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
xWidth = GHC.Int.I8# 16#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.fieldSize2 :: Int8
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.fieldSize2 = GHC.Int.I8# 15#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
Main.fieldSize1 :: (Int8, Int8)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Main.fieldSize1 = (Main.fieldSize2, xWidth)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.fieldSize4 :: Int8
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.fieldSize4 = GHC.Int.I8# 0#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
Main.fieldSize3 :: (Int8, Int8)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Main.fieldSize3 = (Main.fieldSize4, Main.fieldSize4)

-- RHS size: {terms: 3, types: 6, coercions: 0, joins: 0/0}
fieldSize :: ((Int8, Int8), (Int8, Int8))
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
fieldSize = (Main.fieldSize3, Main.fieldSize1)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
yWidth :: Int8
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
yWidth = GHC.Int.I8# 17#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.$trModule2 = "Main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.$trModule1 = GHC.Types.TrNameS Main.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.$trModule3 = GHC.Types.TrNameS Main.$trModule4

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Main.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Main.$trModule = GHC.Types.Module Main.$trModule3 Main.$trModule1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl4_r92a :: Int
[GblId, Caf=NoCafRefs, Str=m]
lvl4_r92a = GHC.Types.I# 74#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl5_r92b :: Int
[GblId, Caf=NoCafRefs, Str=m]
lvl5_r92b = GHC.Types.I# 40#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_r92c :: Int
[GblId, Caf=NoCafRefs, Str=m]
lvl6_r92c = GHC.Types.I# 67#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl7_r92d :: GHC.Stack.Types.SrcLoc
[GblId, Str=m]
lvl7_r92d
  = GHC.Stack.Types.SrcLoc
      Main.arrayByIndex12
      Main.arrayByIndex10
      Main.arrayByIndex8
      lvl4_r92a
      lvl5_r92b
      lvl4_r92a
      lvl6_r92c

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl8_r92e :: GHC.Stack.Types.CallStack
[GblId, Str=m2]
lvl8_r92e
  = GHC.Stack.Types.PushCallStack
      Main.arrayByIndex14 lvl7_r92d GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl9_r92f :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl9_r92f = "Negative range size"#

-- RHS size: {terms: 4, types: 2, coercions: 4, joins: 0/0}
Main.arrayByIndex19 :: Int
[GblId, Str=x]
Main.arrayByIndex19
  = error
      @ 'GHC.Types.LiftedRep
      @ Int
      (lvl8_r92e
       `cast` (Sym (GHC.Classes.N:IP[0]
                        <"callStack">_N <GHC.Stack.Types.CallStack>_N)
               :: (GHC.Stack.Types.CallStack :: *)
                  ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
      (GHC.CString.unpackCString# lvl9_r92f)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl10_r92g :: Int
[GblId, Caf=NoCafRefs, Str=m]
lvl10_r92g = GHC.Types.I# 0#

-- RHS size: {terms: 20, types: 16, coercions: 4, joins: 0/0}
lvl11_r92h :: String -> GHC.Prim.Int# -> Int
[GblId, Arity=2, Str=<B,1*U><B,U>x]
lvl11_r92h
  = \ (lvl22_s6pQ :: String) (y_a50x :: GHC.Prim.Int#) ->
      error
        @ 'GHC.Types.LiftedRep
        @ Int
        (Main.arrayByIndex2
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
        (GHC.CString.unpackAppendCString#
           Main.arrayByIndex1
           (case GHC.Show.$wshowSignedInt 0# y_a50x (GHC.Types.[] @ Char) of
            { (# ww5_a50l, ww6_a50m #) ->
            GHC.Base.++_$s++
              @ Char
              (GHC.CString.unpackAppendCString#
                 Main.arrayByIndex18 (++ @ Char lvl22_s6pQ Main.arrayByIndex16))
              ww5_a50l
              ww6_a50m
            }))

-- RHS size: {terms: 329, types: 299, coercions: 0, joins: 7/12}
Main.$w$sarrayByIndex [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> Int8
     -> GHC.Prim.Int#
     -> Int8
     -> ((Int8, Int8) -> Bool)
     -> UArray (Int8, Int8) Bool
[GblId, Arity=5, Str=<S,U><L,U(U)><S,U><L,U(U)><L,C(U)>]
Main.$w$sarrayByIndex
  = \ (ww_s85J :: GHC.Prim.Int#)
      (ww1_s85L :: Int8)
      (ww2_s85T :: GHC.Prim.Int#)
      (ww3_s85V :: Int8)
      (w_s85A :: (Int8, Int8) -> Bool) ->
      case GHC.Magic.runRW#
             @ ('GHC.Types.TupleRep
                  '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
             @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                  UArray (Int8, Int8) Bool #)
             (\ (s1_a6wv [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                join {
                  $j_s7dA [Dmd=<C(S),1*C1(U)>]
                    :: GHC.Prim.Int#
                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                             UArray (Int8, Int8) Bool #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                  $j_s7dA (ww9_a6gl [OS=OneShot] :: GHC.Prim.Int#)
                    = case GHC.Prim.<# ww9_a6gl 0# of {
                        __DEFAULT ->
                          let {
                            nbytes#_a6wF [Dmd=<S,U>] :: GHC.Prim.Int#
                            [LclId]
                            nbytes#_a6wF
                              = GHC.Prim.uncheckedIShiftRA# (GHC.Prim.+# ww9_a6gl 7#) 3# } in
                          case GHC.Prim.newByteArray#
                                 @ GHC.Prim.RealWorld nbytes#_a6wF s1_a6wv
                          of
                          { (# ipv_a6wK, ipv1_a6wL #) ->
                          case GHC.Prim.setByteArray#
                                 @ GHC.Prim.RealWorld ipv1_a6wL 0# nbytes#_a6wF 0# ipv_a6wK
                          of s3#_a6wN
                          { __DEFAULT ->
                          let {
                            n_s6fo [Dmd=<L,U(U)>] :: Int
                            [LclId]
                            n_s6fo
                              = case GHC.Prim.<=# ww_s85J ww2_s85T of {
                                  __DEFAULT -> lvl10_r92g;
                                  1# ->
                                    case ww1_s85L of { GHC.Int.I8# x_X584 ->
                                    case ww3_s85V of { GHC.Int.I8# y_X58d ->
                                    case GHC.Prim.<=# x_X584 y_X58d of {
                                      __DEFAULT -> lvl10_r92g;
                                      1# ->
                                        let {
                                          ww4_X6l6 [Dmd=<S,U>] :: GHC.Prim.Int#
                                          [LclId]
                                          ww4_X6l6
                                            = GHC.Prim.+#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.*#
                                                      (GHC.Prim.-# ww2_s85T ww_s85J)
                                                      (GHC.Prim.+# (GHC.Prim.-# y_X58d x_X584) 1#))
                                                   (GHC.Prim.-# y_X58d x_X584))
                                                1# } in
                                        case GHC.Prim.<# ww4_X6l6 0# of {
                                          __DEFAULT -> GHC.Types.I# ww4_X6l6;
                                          1# -> Main.arrayByIndex19
                                        }
                                    }
                                    }
                                    }
                                } } in
                          join {
                            exit_X2F [Dmd=<C(S),C(U)>]
                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                       UArray (Int8, Int8) Bool #)
                            [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                            exit_X2F (eta_B1 [OS=OneShot]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld)
                              = case GHC.Prim.unsafeFreezeByteArray#
                                       @ GHC.Prim.RealWorld ipv1_a6wL eta_B1
                                of
                                { (# ipv5_a6zS, ipv6_a6zT #) ->
                                (# ipv5_a6zS,
                                   Data.Array.Base.UArray
                                     @ (Int8, Int8)
                                     @ Bool
                                     (GHC.Int.I8# ww_s85J, ww1_s85L)
                                     (GHC.Int.I8# ww2_s85T, ww3_s85V)
                                     ww9_a6gl
                                     ipv6_a6zT #)
                                } } in
                          join {
                            exit1_X2J [Dmd=<L,C(U)>]
                              :: GHC.Prim.Int#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                       UArray (Int8, Int8) Bool #)
                            [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                            exit1_X2J (y_a50x [OS=OneShot] :: GHC.Prim.Int#)
                              = case lvl11_r92h
                                       (case n_s6fo of { GHC.Types.I# ww5_a50h ->
                                        case GHC.Show.$wshowSignedInt
                                               0# ww5_a50h (GHC.Types.[] @ Char)
                                        of
                                        { (# ww7_a50l, ww8_a50m #) ->
                                        GHC.Types.: @ Char ww7_a50l ww8_a50m
                                        }
                                        })
                                       y_a50x
                                of wild_00 {
                                } } in
                          joinrec {
                            go_s7m6 [Occ=LoopBreaker]
                              :: [Int8]
                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                       UArray (Int8, Int8) Bool #)
                            [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                            go_s7m6 (ds1_a4WU :: [Int8])
                                    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld)
                              = case ds1_a4WU of {
                                  [] -> jump exit_X2F eta_B1;
                                  : y_a4WZ ys_a4X0 ->
                                    case ww1_s85L of { GHC.Int.I8# ww5_a58r ->
                                    case ww3_s85V of { GHC.Int.I8# ww7_a58w ->
                                    join {
                                      exit2_X2L [Dmd=<C(S),C(U)>]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 UArray (Int8, Int8) Bool #)
                                      [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                                      exit2_X2L (eta1_X4I [OS=OneShot]
                                                   :: GHC.Prim.State# GHC.Prim.RealWorld)
                                        = jump go_s7m6 ys_a4X0 eta1_X4I } in
                                    join {
                                      exit3_X31 [Dmd=<L,C(U)>]
                                        :: GHC.Prim.Int#
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 UArray (Int8, Int8) Bool #)
                                      [LclId[JoinId(1)], Arity=1, Str=<B,U>b]
                                      exit3_X31 (y1_a50x [OS=OneShot] :: GHC.Prim.Int#)
                                        = jump exit1_X2J y1_a50x } in
                                    joinrec {
                                      go1_s7m5 [Occ=LoopBreaker]
                                        :: [Int8]
                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 UArray (Int8, Int8) Bool #)
                                      [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                                      go1_s7m5 (ds2_X51X :: [Int8])
                                               (eta1_X4I :: GHC.Prim.State# GHC.Prim.RealWorld)
                                        = case ds2_X51X of {
                                            [] -> jump exit2_X2L eta1_X4I;
                                            : y1_X525 ys1_X527 ->
                                              case y_a4WZ of wild2_X58I { GHC.Int.I8# y2_X58M ->
                                              case GHC.Prim.<=# ww_s85J y2_X58M of {
                                                __DEFAULT ->
                                                  case GHC.Arr.hopelessIndexError of wild3_00 { };
                                                1# ->
                                                  case GHC.Prim.<=# y2_X58M ww2_s85T of {
                                                    __DEFAULT ->
                                                      case GHC.Arr.hopelessIndexError of wild3_00 {
                                                      };
                                                    1# ->
                                                      case y1_X525 of wild3_X58l
                                                      { GHC.Int.I8# y3_X58p ->
                                                      case GHC.Prim.<=# ww5_a58r y3_X58p of {
                                                        __DEFAULT ->
                                                          case GHC.Arr.hopelessIndexError
                                                          of wild4_00 {
                                                          };
                                                        1# ->
                                                          case GHC.Prim.<=# y3_X58p ww7_a58w of {
                                                            __DEFAULT ->
                                                              case GHC.Arr.hopelessIndexError
                                                              of wild4_00 {
                                                              };
                                                            1# ->
                                                              let {
                                                                y4_a50x [Dmd=<S,U>] :: GHC.Prim.Int#
                                                                [LclId]
                                                                y4_a50x
                                                                  = GHC.Prim.+#
                                                                      (GHC.Prim.*#
                                                                         (GHC.Prim.-#
                                                                            y2_X58M ww_s85J)
                                                                         (GHC.Prim.+#
                                                                            (GHC.Prim.-#
                                                                               ww7_a58w ww5_a58r)
                                                                            1#))
                                                                      (GHC.Prim.-#
                                                                         y3_X58p ww5_a58r) } in
                                                              case GHC.Prim.<=# 0# y4_a50x of {
                                                                __DEFAULT -> jump exit3_X31 y4_a50x;
                                                                1# ->
                                                                  case n_s6fo of
                                                                  { GHC.Types.I# y5_X53u ->
                                                                  case GHC.Prim.<# y4_a50x y5_X53u
                                                                  of {
                                                                    __DEFAULT ->
                                                                      jump exit3_X31 y4_a50x;
                                                                    1# ->
                                                                      let {
                                                                        j#_a6zk [Dmd=<S,U>]
                                                                          :: GHC.Prim.Int#
                                                                        [LclId]
                                                                        j#_a6zk
                                                                          = GHC.Prim.uncheckedIShiftRA#
                                                                              y4_a50x 6# } in
                                                                      case GHC.Prim.readWordArray#
                                                                             @ GHC.Prim.RealWorld
                                                                             ipv1_a6wL
                                                                             j#_a6zk
                                                                             eta1_X4I
                                                                      of
                                                                      { (# ipv3_a6zp,
                                                                           ipv4_a6zq #) ->
                                                                      case w_s85A
                                                                             (wild2_X58I,
                                                                              wild3_X58l)
                                                                      of {
                                                                        False ->
                                                                          case GHC.Prim.writeWordArray#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 ipv1_a6wL
                                                                                 j#_a6zk
                                                                                 (GHC.Prim.and#
                                                                                    ipv4_a6zq
                                                                                    (GHC.Prim.xor#
                                                                                       (GHC.Prim.uncheckedShiftL#
                                                                                          1##
                                                                                          (GHC.Prim.word2Int#
                                                                                             (GHC.Prim.and#
                                                                                                (GHC.Prim.int2Word#
                                                                                                   y4_a50x)
                                                                                                63##)))
                                                                                       18446744073709551615##))
                                                                                 ipv3_a6zp
                                                                          of s3#1_a6zv
                                                                          { __DEFAULT ->
                                                                          jump go1_s7m5
                                                                            ys1_X527 s3#1_a6zv
                                                                          };
                                                                        True ->
                                                                          case GHC.Prim.writeWordArray#
                                                                                 @ GHC.Prim.RealWorld
                                                                                 ipv1_a6wL
                                                                                 j#_a6zk
                                                                                 (GHC.Prim.or#
                                                                                    ipv4_a6zq
                                                                                    (GHC.Prim.uncheckedShiftL#
                                                                                       1##
                                                                                       (GHC.Prim.word2Int#
                                                                                          (GHC.Prim.and#
                                                                                             (GHC.Prim.int2Word#
                                                                                                y4_a50x)
                                                                                             63##))))
                                                                                 ipv3_a6zp
                                                                          of s3#1_a6zy
                                                                          { __DEFAULT ->
                                                                          jump go1_s7m5
                                                                            ys1_X527 s3#1_a6zy
                                                                          }
                                                                      }
                                                                      }
                                                                  }
                                                                  }
                                                              }
                                                          }
                                                      }
                                                      }
                                                  }
                                              }
                                              }
                                          }; } in
                                    jump go1_s7m5 (GHC.Int.$w$cenumFromTo3 ww5_a58r ww7_a58w) eta_B1
                                    }
                                    }
                                }; } in
                          jump go_s7m6 (GHC.Int.$w$cenumFromTo3 ww_s85J ww2_s85T) s3#_a6wN
                          }
                          };
                        1# -> case Main.arrayByIndex19 of wild_00 { }
                      } } in
                case GHC.Prim.<=# ww_s85J ww2_s85T of {
                  __DEFAULT -> jump $j_s7dA 0#;
                  1# ->
                    case ww1_s85L of { GHC.Int.I8# x_X588 ->
                    case ww3_s85V of { GHC.Int.I8# y_X58h ->
                    case GHC.Prim.<=# x_X588 y_X58h of {
                      __DEFAULT -> jump $j_s7dA 0#;
                      1# ->
                        jump $j_s7dA
                          (GHC.Prim.+#
                             (GHC.Prim.+#
                                (GHC.Prim.*#
                                   (GHC.Prim.-# ww2_s85T ww_s85J)
                                   (GHC.Prim.+# (GHC.Prim.-# y_X58h x_X588) 1#))
                                (GHC.Prim.-# y_X58h x_X588))
                             1#)
                    }
                    }
                    }
                })
      of
      { (# ipv_a6A3, ipv1_a6A4 #) ->
      ipv1_a6A4
      }

-- RHS size: {terms: 106, types: 94, coercions: 4, joins: 1/5}
Main.$warrayByIndex [InlPrag=NOUSERINLINE[0]]
  :: forall (a :: * -> * -> *) e i.
     (IArray a e, Ix i) =>
     i -> i -> (i -> e) -> a i e
[GblId,
 Arity=5,
 Str=<S(LLC(C(C(S)))LLLL),1*U(A,A,1*C1(C1(C1(U))),A,A,A,A)><L,U(U,U,U,U,U,U,U)><L,U><L,U><L,C(U)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 90 0 0 60] 707 0}]
Main.$warrayByIndex
  = \ (@ (a_s860 :: * -> * -> *))
      (@ e_s861)
      (@ i_s862)
      (w_s863 :: IArray a_s860 e_s861)
      (w1_s864 :: Ix i_s862)
      (ww_s869 :: i_s862)
      (ww1_s86a :: i_s862)
      (w2_s866 :: i_s862 -> e_s861) ->
      Data.Array.Base.unsafeArray
        @ a_s860
        @ e_s861
        w_s863
        @ i_s862
        w1_s864
        (ww_s869, ww1_s86a)
        (let {
           lvl22_s6qe :: (i_s862, i_s862)
           [LclId, Unf=OtherCon []]
           lvl22_s6qe = (ww_s869, ww1_s86a) } in
         let {
           n_s6fd [Dmd=<L,U(U)>] :: Int
           [LclId]
           n_s6fd
             = case rangeSize @ i_s862 w1_s864 (ww_s869, ww1_s86a) of wild_a4Y8
               { GHC.Types.I# x_a4Ya ->
               case GHC.Prim.<# x_a4Ya 0# of {
                 __DEFAULT -> wild_a4Y8;
                 1# -> Main.arrayByIndex19
               }
               } } in
         let {
           lvl23_s8BH :: [Char]
           [LclId]
           lvl23_s8BH
             = GHC.CString.unpackAppendCString#
                 Main.arrayByIndex18
                 (case n_s6fd of { GHC.Types.I# ww3_a50h ->
                  case GHC.Show.$wshowSignedInt 0# ww3_a50h (GHC.Types.[] @ Char) of
                  { (# ww5_a50l, ww6_a50m #) ->
                  GHC.Base.++_$s++ @ Char Main.arrayByIndex16 ww5_a50l ww6_a50m
                  }
                  }) } in
         letrec {
           go_a4WT [Occ=LoopBreaker] :: [i_s862] -> [(Int, e_s861)]
           [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
           go_a4WT
             = \ (ds_a4WU :: [i_s862]) ->
                 case ds_a4WU of {
                   [] -> GHC.Types.[] @ (Int, e_s861);
                   : y_a4WZ ys_a4X0 ->
                     GHC.Types.:
                       @ (Int, e_s861)
                       (case index @ i_s862 w1_s864 lvl22_s6qe y_a4WZ of wild1_a50v
                        { GHC.Types.I# y1_a50x ->
                        join {
                          $j_s6fg [Dmd=<L,1*U>] :: Int
                          [LclId[JoinId(0)], Str=x]
                          $j_s6fg
                            = error
                                @ 'GHC.Types.LiftedRep
                                @ Int
                                (Main.arrayByIndex2
                                 `cast` (Sym (GHC.Classes.N:IP[0]
                                                  <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                                         :: (GHC.Stack.Types.CallStack :: *)
                                            ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))
                                (GHC.CString.unpackAppendCString#
                                   Main.arrayByIndex1
                                   (case GHC.Show.$wshowSignedInt 0# y1_a50x (GHC.Types.[] @ Char)
                                    of
                                    { (# ww5_a50l, ww6_a50m #) ->
                                    GHC.Base.++_$s++ @ Char lvl23_s8BH ww5_a50l ww6_a50m
                                    })) } in
                        case GHC.Prim.<=# 0# y1_a50x of {
                          __DEFAULT -> jump $j_s6fg;
                          1# ->
                            case n_s6fd of { GHC.Types.I# y2_a4Ye ->
                            case GHC.Prim.<# y1_a50x y2_a4Ye of {
                              __DEFAULT -> jump $j_s6fg;
                              1# -> wild1_a50v
                            }
                            }
                        }
                        },
                        w2_s866 y_a4WZ)
                       (go_a4WT ys_a4X0)
                 }; } in
         go_a4WT (range @ i_s862 w1_s864 lvl22_s6qe))

-- RHS size: {terms: 16, types: 28, coercions: 0, joins: 0/0}
arrayByIndex [InlPrag=NOUSERINLINE[0]]
  :: forall (a :: * -> * -> *) e i.
     (IArray a e, Ix i) =>
     (i, i) -> (i -> e) -> a i e
[GblId,
 Arity=4,
 Str=<S(LLC(C(C(S)))LLLL),1*U(A,A,1*C1(C1(C1(U))),A,A,A,A)><L,U(U,U,U,U,U,U,U)><S,1*U(U,U)><L,C(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ (a_s860 :: * -> * -> *))
                 (@ e_s861)
                 (@ i_s862)
                 (w_s863 [Occ=Once] :: IArray a_s860 e_s861)
                 (w1_s864 [Occ=Once] :: Ix i_s862)
                 (w2_s865 [Occ=Once!] :: (i_s862, i_s862))
                 (w3_s866 [Occ=Once] :: i_s862 -> e_s861) ->
                 case w2_s865 of { (ww1_s869 [Occ=Once], ww2_s86a [Occ=Once]) ->
                 Main.$warrayByIndex
                   @ a_s860 @ e_s861 @ i_s862 w_s863 w1_s864 ww1_s869 ww2_s86a w3_s866
                 }}]
arrayByIndex
  = \ (@ (a_s860 :: * -> * -> *))
      (@ e_s861)
      (@ i_s862)
      (w_s863 :: IArray a_s860 e_s861)
      (w1_s864 :: Ix i_s862)
      (w2_s865 :: (i_s862, i_s862))
      (w3_s866 :: i_s862 -> e_s861) ->
      case w2_s865 of { (ww1_s869, ww2_s86a) ->
      Main.$warrayByIndex
        @ a_s860 @ e_s861 @ i_s862 w_s863 w1_s864 ww1_s869 ww2_s86a w3_s866
      }

-- RHS size: {terms: 552, types: 102, coercions: 0, joins: 3/7}
updateGameState :: GameState -> GameState
[GblId, Arity=1, Str=<L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)>]
updateGameState
  = \ (a_a24y :: GameState) ->
      let {
        $wg_s86r [InlPrag=NOUSERINLINE[0], Dmd=<L,C(C1(U))>]
          :: GHC.Prim.Int# -> GHC.Prim.Int# -> Bool
        [LclId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
        $wg_s86r
          = \ (ww_s86j :: GHC.Prim.Int#) (ww1_s86o :: GHC.Prim.Int#) ->
              case a_a24y of
              { Data.Array.Base.UArray l_a51M u_a51N dt_a51O ds1_a51P ->
              case l_a51M of { (l1_s8BK, l2_s8BL) ->
              case u_a51N of { (u1_s8BO, u2_s8BP) ->
              case l1_s8BK of { GHC.Int.I8# x_a53E ->
              let {
                y_a53I [Dmd=<S,U>] :: GHC.Prim.Int#
                [LclId]
                y_a53I = GHC.Prim.narrow8Int# (GHC.Prim.andI# ww_s86j 15#) } in
              case GHC.Prim.<=# x_a53E y_a53I of {
                __DEFAULT -> case GHC.Arr.hopelessIndexError of wild5_00 { };
                1# ->
                  case u1_s8BO of { GHC.Int.I8# y1_a53N ->
                  case GHC.Prim.<=# y_a53I y1_a53N of {
                    __DEFAULT -> case GHC.Arr.hopelessIndexError of wild5_00 { };
                    1# ->
                      case l2_s8BL of { GHC.Int.I8# x1_X5a2 ->
                      case GHC.Classes.modInt# ww1_s86o 17# of wild6_X58h { __DEFAULT ->
                      let {
                        y2_X5ab [Dmd=<S,U>] :: GHC.Prim.Int#
                        [LclId]
                        y2_X5ab = GHC.Prim.narrow8Int# wild6_X58h } in
                      case GHC.Prim.<=# x1_X5a2 y2_X5ab of {
                        __DEFAULT -> case GHC.Arr.hopelessIndexError of wild7_00 { };
                        1# ->
                          case u2_s8BP of { GHC.Int.I8# y3_X58C ->
                          case GHC.Prim.<=# y2_X5ab y3_X58C of {
                            __DEFAULT -> case GHC.Arr.hopelessIndexError of wild8_00 { };
                            1# ->
                              let {
                                y4_a50x [Dmd=<S,U>] :: GHC.Prim.Int#
                                [LclId]
                                y4_a50x
                                  = GHC.Prim.+#
                                      (GHC.Prim.*#
                                         (GHC.Prim.-# y_a53I x_a53E)
                                         (GHC.Prim.+# (GHC.Prim.-# y3_X58C x1_X5a2) 1#))
                                      (GHC.Prim.-# y2_X5ab x1_X5a2) } in
                              case GHC.Prim.<=# 0# y4_a50x of {
                                __DEFAULT ->
                                  case Main.viewGameState3 dt_a51O y4_a50x of wild8_00 { };
                                1# ->
                                  case GHC.Prim.<# y4_a50x dt_a51O of {
                                    __DEFAULT ->
                                      case Main.viewGameState3 dt_a51O y4_a50x of wild8_00 { };
                                    1# ->
                                      case GHC.Prim.indexWordArray#
                                             ds1_a51P (GHC.Prim.uncheckedIShiftRA# y4_a50x 6#)
                                      of wild8_a528
                                      { __DEFAULT ->
                                      case GHC.Prim.and#
                                             wild8_a528
                                             (GHC.Prim.uncheckedShiftL#
                                                1##
                                                (GHC.Prim.word2Int#
                                                   (GHC.Prim.and#
                                                      (GHC.Prim.int2Word# y4_a50x) 63##)))
                                      of {
                                        __DEFAULT -> GHC.Types.True;
                                        0## -> GHC.Types.False
                                      }
                                      }
                                  }
                              }
                          }
                          }
                      }
                      }
                      }
                  }
                  }
              }
              }
              }
              }
              } } in
      Main.$w$sarrayByIndex
        0#
        Main.fieldSize4
        15#
        xWidth
        (\ (p_a4XD :: (Int8, Int8)) ->
           case p_a4XD of { (ds_a4XL, y_a4XM) ->
           case y_a4XM of { GHC.Int.I8# ww1_s86u ->
           case ds_a4XL of { GHC.Int.I8# ww3_s86y ->
           join {
             $wr_s86L [InlPrag=NOUSERINLINE[0], Dmd=<C(S),1*C1(U)>]
               :: GHC.Prim.Int# -> Bool
             [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
             $wr_s86L (ww4_s86J [OS=OneShot] :: GHC.Prim.Int#)
               = join {
                   $wr1_s86F [InlPrag=NOUSERINLINE[0], Dmd=<C(S),1*C1(U)>]
                     :: GHC.Prim.Int# -> Bool
                   [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                   $wr1_s86F (ww5_s86D [OS=OneShot] :: GHC.Prim.Int#)
                     = join {
                         $j_s8cT [Dmd=<C(S),1*C1(U)>] :: GHC.Prim.Int# -> Bool
                         [LclId[JoinId(1)], Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                         $j_s8cT (ww6_s86O [OS=OneShot] :: GHC.Prim.Int#)
                           = case $wg_s86r ww3_s86y ww1_s86u of {
                               False ->
                                 case ww6_s86O of {
                                   __DEFAULT -> GHC.Types.False;
                                   3# -> GHC.Types.True
                                 };
                               True ->
                                 case ww6_s86O of {
                                   __DEFAULT -> GHC.Types.False;
                                   2# -> GHC.Types.True;
                                   3# -> GHC.Types.True
                                 }
                             } } in
                       case $wg_s86r
                              ww3_s86y (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                       of {
                         False ->
                           case $wg_s86r
                                  (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                  (GHC.Prim.narrow8Int# (GHC.Prim.-# ww1_s86u 1#))
                           of {
                             False ->
                               case $wg_s86r
                                      (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#)) ww1_s86u
                               of {
                                 False ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False -> jump $j_s8cT ww5_s86D;
                                     True -> jump $j_s8cT (GHC.Prim.+# ww5_s86D 1#)
                                   };
                                 True ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False -> jump $j_s8cT (GHC.Prim.+# ww5_s86D 1#);
                                     True -> jump $j_s8cT (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#)
                                   }
                               };
                             True ->
                               case $wg_s86r
                                      (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#)) ww1_s86u
                               of {
                                 False ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False -> jump $j_s8cT (GHC.Prim.+# ww5_s86D 1#);
                                     True -> jump $j_s8cT (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#)
                                   };
                                 True ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False ->
                                       jump $j_s8cT (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#);
                                     True ->
                                       jump $j_s8cT
                                         (GHC.Prim.+# (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#) 1#)
                                   }
                               }
                           };
                         True ->
                           case $wg_s86r
                                  (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                  (GHC.Prim.narrow8Int# (GHC.Prim.-# ww1_s86u 1#))
                           of {
                             False ->
                               case $wg_s86r
                                      (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#)) ww1_s86u
                               of {
                                 False ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False -> jump $j_s8cT (GHC.Prim.+# ww5_s86D 1#);
                                     True -> jump $j_s8cT (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#)
                                   };
                                 True ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False ->
                                       jump $j_s8cT (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#);
                                     True ->
                                       jump $j_s8cT
                                         (GHC.Prim.+# (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#) 1#)
                                   }
                               };
                             True ->
                               case $wg_s86r
                                      (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#)) ww1_s86u
                               of {
                                 False ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False ->
                                       jump $j_s8cT (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#);
                                     True ->
                                       jump $j_s8cT
                                         (GHC.Prim.+# (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#) 1#)
                                   };
                                 True ->
                                   case $wg_s86r
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww3_s86y 1#))
                                          (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                                   of {
                                     False ->
                                       jump $j_s8cT
                                         (GHC.Prim.+#
                                            (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#) 1#);
                                     True ->
                                       jump $j_s8cT
                                         (GHC.Prim.+#
                                            (GHC.Prim.+#
                                               (GHC.Prim.+# (GHC.Prim.+# ww5_s86D 1#) 1#) 1#)
                                            1#)
                                   }
                               }
                           }
                       } } in
                 case $wg_s86r
                        (GHC.Prim.narrow8Int# (GHC.Prim.-# ww3_s86y 1#)) ww1_s86u
                 of {
                   False ->
                     case $wg_s86r
                            (GHC.Prim.narrow8Int# (GHC.Prim.-# ww3_s86y 1#))
                            (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                     of {
                       False ->
                         case $wg_s86r
                                ww3_s86y (GHC.Prim.narrow8Int# (GHC.Prim.-# ww1_s86u 1#))
                         of {
                           False -> jump $wr1_s86F ww4_s86J;
                           True -> jump $wr1_s86F (GHC.Prim.+# ww4_s86J 1#)
                         };
                       True ->
                         case $wg_s86r
                                ww3_s86y (GHC.Prim.narrow8Int# (GHC.Prim.-# ww1_s86u 1#))
                         of {
                           False -> jump $wr1_s86F (GHC.Prim.+# ww4_s86J 1#);
                           True -> jump $wr1_s86F (GHC.Prim.+# (GHC.Prim.+# ww4_s86J 1#) 1#)
                         }
                     };
                   True ->
                     case $wg_s86r
                            (GHC.Prim.narrow8Int# (GHC.Prim.-# ww3_s86y 1#))
                            (GHC.Prim.narrow8Int# (GHC.Prim.+# ww1_s86u 1#))
                     of {
                       False ->
                         case $wg_s86r
                                ww3_s86y (GHC.Prim.narrow8Int# (GHC.Prim.-# ww1_s86u 1#))
                         of {
                           False -> jump $wr1_s86F (GHC.Prim.+# ww4_s86J 1#);
                           True -> jump $wr1_s86F (GHC.Prim.+# (GHC.Prim.+# ww4_s86J 1#) 1#)
                         };
                       True ->
                         case $wg_s86r
                                ww3_s86y (GHC.Prim.narrow8Int# (GHC.Prim.-# ww1_s86u 1#))
                         of {
                           False -> jump $wr1_s86F (GHC.Prim.+# (GHC.Prim.+# ww4_s86J 1#) 1#);
                           True ->
                             jump $wr1_s86F
                               (GHC.Prim.+# (GHC.Prim.+# (GHC.Prim.+# ww4_s86J 1#) 1#) 1#)
                         }
                     }
                 } } in
           case $wg_s86r
                  (GHC.Prim.narrow8Int# (GHC.Prim.-# ww3_s86y 1#))
                  (GHC.Prim.narrow8Int# (GHC.Prim.-# ww1_s86u 1#))
           of {
             False -> jump $wr_s86L 0#;
             True -> jump $wr_s86L 1#
           }
           }
           }
           })

Rec {
-- RHS size: {terms: 25, types: 23, coercions: 0, joins: 0/0}
Main.$wloop [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GameState
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S,1*U><S,U>]
Main.$wloop
  = \ (w_s86R :: GameState)
      (ww_s86W :: GHC.Prim.Int#)
      (w1_s86T :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case ww_s86W of ds_X4FJ {
        __DEFAULT ->
          case GHC.IO.Handle.Text.hPutStr2
                 stdout (viewGameState w_s86R) GHC.Types.True w1_s86T
          of
          { (# ipv_a58Y, ipv1_a58Z #) ->
          Main.$wloop
            (updateGameState w_s86R) (GHC.Prim.-# ds_X4FJ 1#) ipv_a58Y
          };
        0# -> (# w1_s86T, GHC.Tuple.() #)
      }
end Rec }

-- RHS size: {terms: 10, types: 6, coercions: 0, joins: 0/0}
Main.loop1 [InlPrag=NOUSERINLINE[0]]
  :: GameState
     -> Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S(S),1*U(1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s86R [Occ=Once] :: GameState)
                 (w1_s86S [Occ=Once!] :: Int)
                 (w2_s86T [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1_s86S of { GHC.Types.I# ww1_s86W [Occ=Once] ->
                 Main.$wloop w_s86R ww1_s86W w2_s86T
                 }}]
Main.loop1
  = \ (w_s86R :: GameState)
      (w1_s86S :: Int)
      (w2_s86T :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case w1_s86S of { GHC.Types.I# ww1_s86W ->
      Main.$wloop w_s86R ww1_s86W w2_s86T
      }

-- RHS size: {terms: 1, types: 0, coercions: 7, joins: 0/0}
loop :: GameState -> Int -> IO ()
[GblId,
 Arity=3,
 Str=<L,U(U(U(U),U(U)),U(U(U),U(U)),U,U)><S(S),1*U(1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Main.loop1
               `cast` (<GameState>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (GameState
                           -> Int
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                          ~R# (GameState -> Int -> IO () :: *))}]
loop
  = Main.loop1
    `cast` (<GameState>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (GameState
                -> Int
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
               ~R# (GameState -> Int -> IO () :: *))

-- RHS size: {terms: 53, types: 24, coercions: 0, joins: 1/1}
Main.newGameState1 :: (Int8, Int8) -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)L),1*U(1*U(U),U(U))>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20] 188 10}]
Main.newGameState1
  = \ (p_a4XD :: (Int8, Int8)) ->
      case p_a4XD of { (x_a4XG, ds_a4XH) ->
      case x_a4XG of { GHC.Int.I8# x1_a5sw ->
      join {
        fail_s6eF [Dmd=<L,1*C1(U)>] :: GHC.Prim.Void# -> Bool
        [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []]
        fail_s6eF _ [Occ=Dead, OS=OneShot]
          = case x1_a5sw of {
              __DEFAULT -> GHC.Types.False;
              1# ->
                case ds_a4XH of { GHC.Int.I8# x2_X5wT ->
                case x2_X5wT of {
                  __DEFAULT -> GHC.Types.False;
                  2# -> GHC.Types.True
                }
                };
              2# ->
                case ds_a4XH of { GHC.Int.I8# x2_X5wT ->
                case x2_X5wT of {
                  __DEFAULT -> GHC.Types.False;
                  0# -> GHC.Types.True;
                  1# -> GHC.Types.True;
                  2# -> GHC.Types.True
                }
                }
            } } in
      case x1_a5sw of {
        __DEFAULT -> jump fail_s6eF GHC.Prim.void#;
        0# ->
          case ds_a4XH of { GHC.Int.I8# x2_X5wR ->
          case x2_X5wR of {
            __DEFAULT -> jump fail_s6eF GHC.Prim.void#;
            1# -> GHC.Types.True
          }
          }
      }
      }
      }

-- RHS size: {terms: 6, types: 0, coercions: 0, joins: 0/0}
newGameState :: GameState
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 60 0}]
newGameState
  = Main.$w$sarrayByIndex
      0# Main.fieldSize4 15# xWidth Main.newGameState1

-- RHS size: {terms: 11, types: 13, coercions: 0, joins: 0/0}
Main.main1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_a58V [Occ=Once]
                    :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.hSetBuffering1
                        stdout GHC.IO.Handle.Types.NoBuffering s_a58V
                 of
                 { (# ipv_a58Y [Occ=Once], _ [Occ=Dead] #) ->
                 Main.loop1 newGameState (GHC.Types.I# 4000#) ipv_a58Y
                 }}]
Main.main1
  = \ (s_a58V :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.IO.Handle.hSetBuffering1
             stdout GHC.IO.Handle.Types.NoBuffering s_a58V
      of
      { (# ipv_a58Y, ipv1_a58Z #) ->
      Main.$wloop newGameState 4000# ipv_a58Y
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
main :: IO ()
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Main.main1
               `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                          ~R# (IO () :: *))}]
main
  = Main.main1
    `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
               ~R# (IO () :: *))

-- RHS size: {terms: 2, types: 1, coercions: 3, joins: 0/0}
Main.main2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
Main.main2
  = GHC.TopHandler.runMainIO1
      @ ()
      (Main.main1
       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
               :: (GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                  ~R# (IO () :: *)))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
:Main.main :: IO ()
[GblId,
 Arity=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Main.main2
               `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                          ~R# (IO () :: *))}]
:Main.main
  = Main.main2
    `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
               ~R# (IO () :: *))


